apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: web-service
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: web-ui-service
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: web-service
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/maxScale: "10"
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/scaleDownDelay: 10m
        boot.spring.io/version: 2.7.1
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/app-live-view-appflavour-check
          spring-boot-convention/app-live-view-connector-boot
          spring-boot-convention/app-live-view-appflavours-boot
        developer.conventions/target-containers: workload
        instrumentation.opentelemetry.io/inject-java: my-apps/my-instrumentation
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-java":"my-apps/my-instrumentation"},"labels":{"app.kubernetes.io/part-of":"web-ui-service","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"web"},"name":"web-service","namespace":"my-apps"},"spec":{"build":{"env":[{"name":"BP_JVM_VERSION","value":"17.*"}]},"env":[{"name":"spring.cloud.config.uri","value":"http://config-server.my-apps.svc.cluster.local"},{"name":"EUREKA_URL","value":"http://discovery-server.my-apps.svc.cluster.local/eureka"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"application=bankingApp"},{"name":"DEP_NS","value":"my-apps"}],"params":[{"name":"annotations","value":{"autoscaling.knative.dev/maxScale":"10","autoscaling.knative.dev/minScale":"1","autoscaling.knative.dev/scaleDownDelay":"10m"}},{"name":"testing_pipeline_matching_labels","value":{"apps.tanzu.vmware.com/language":"java","apps.tanzu.vmware.com/pipeline":"test"}},{"name":"scanning_source_policy","value":"scan-policy"},{"name":"scanning_image_policy","value":"scan-policy"}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/MoSehsah/bank-demo"},"subPath":"web-ui"}}}
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: web-ui-service
        apps.tanzu.vmware.com/auto-configure-actuators: "false"
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: web-service
        conventions.carto.run/framework: spring-boot
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.path: actuator
        tanzu.app.live.view.application.actuator.port: "8080"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: web-service
    spec:
      containers:
      - env:
        - name: spring.cloud.config.uri
          value: http://config-server.my-apps.svc.cluster.local
        - name: EUREKA_URL
          value: http://discovery-server.my-apps.svc.cluster.local/eureka
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: application=bankingApp
        - name: DEP_NS
          value: my-apps
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.health.probes.enabled="true" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: colellar.azurecr.io/tap/supplychain/web-service-my-apps@sha256:4f09e12c825b5f8b0645ab8657d008845b69bc5ca4dfc62c84cebe39e4ef7bbf
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

